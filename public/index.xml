<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>编程范</title>
        <link>https://bimu.netlify.app/</link>
        <description>Recent content on 编程范</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 20 Sep 2021 20:39:46 +0800</lastBuildDate><atom:link href="https://bimu.netlify.app/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>如何在Github上免费开通一个Github Page作为个人主页</title>
        <link>https://bimu.netlify.app/p/%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%85%8D%E8%B4%B9%E5%BC%80%E9%80%9A%E4%B8%80%E4%B8%AAgithub-page%E4%BD%9C%E4%B8%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</link>
        <pubDate>Mon, 20 Sep 2021 20:39:46 +0800</pubDate>
        
        <guid>https://bimu.netlify.app/p/%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%85%8D%E8%B4%B9%E5%BC%80%E9%80%9A%E4%B8%80%E4%B8%AAgithub-page%E4%BD%9C%E4%B8%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</guid>
        <description>&lt;img src="https://qiniu.csit.fun/free_website.png" alt="Featured image of post 如何在Github上免费开通一个Github Page作为个人主页" /&gt;&lt;p&gt;为什么要选择在Github上建站，原因很简单，它是免费的．&lt;/p&gt;
&lt;p&gt;只要你按照下面的六步走，就可以轻轻松松发布自己的网站，你不需要有任何关于编程或者网站建设的基础知识．所有的前提只是，你要有一个github账号．&lt;/p&gt;
&lt;p&gt;当你下定决心要建站的时候，你就开始面临一系列的选择．我在上个文章中就已经提到了大家会面临的第一个分叉路口．对于一个想要搭建&lt;strong&gt;个人博客&lt;/strong&gt;系统的新手，我坚定地建议你采用Github托管的方式，原因很简单，它是免费的．&lt;/p&gt;
&lt;p&gt;你可以在Github上免费开通&lt;a class=&#34;link&#34; href=&#34;https://pages.github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github Page&lt;/a&gt;，为你个人或者你的项目建立一个网站．&lt;a class=&#34;link&#34; href=&#34;https://pages.github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github Page&lt;/a&gt;官方网站上有详细的介绍和操作流程．让我们开始操作吧．&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一步．创建存储库 (repository)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;转到&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;并&lt;a class=&#34;link&#34; href=&#34;https://github.com/new&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;创建一个&lt;/a&gt;名为&lt;em&gt;username&lt;/em&gt; .github.io &lt;a class=&#34;link&#34; href=&#34;https://github.com/new&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;的新存储库&lt;/a&gt;，其中&lt;em&gt;username&lt;/em&gt;是你在GitHub上的用户名（或组织名称）。&lt;/p&gt;
&lt;p&gt;如果存储库的第一部分与您的用户名不完全匹配，则无法正常工作，因此请务必正确使用。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;需要注意的是&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在实际操作中你会发现，如果你有自己的独立域名，对新储存库的命名不需要遵循这么严格的规则．以我自己为例，我的Github用户名是yiyouls,　我给自己用来建立Github Page的新仓库命名为blog.　同样是可行的．&lt;/li&gt;
&lt;li&gt;仓库属性也可以选择Public&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;第二步，进入储存库，转到设置(settings)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在设置页面你可以对你的新储存库进行相关设置，你可以在这里设置你的GIthub Page特性，包括功能的开启与关闭，是否绑定定制域名(custom domain).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第三步，下载使用Github桌面客户端(Github Desktop)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GitHub Desktop是在macOS和Windows上使用Git和GitHub的好方法。（如果你不想使用Github客户端，你也可以直接在终端里通过&lt;code&gt;git&lt;/code&gt;命令进行操作&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，我会把terminal的操作方法一并列出）&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://desktop.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载GitHub桌面&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第四步，将储存库克隆到本地，用Github桌面客户端打开&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;客户端完成安装后，返回我们刚建的储存库主页并刷新页面。单击“Set up in Desktop”按钮。当GitHub桌面应用程序打开时，保存项目。这样我们就把该储存库克隆到了本地．&lt;/p&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果Github桌面客户端未能打开，你可以从电脑应用程序库找到它并启动，用户登录后，你可以看到你名下的所有储存库，找到我们新建的那个，手动克隆它．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你使用terminal操作，你首先需要&lt;code&gt;cd&lt;/code&gt;到你准备存放你的项目的文件夹（一定要记得你存放的路径），通过下面的操作克隆你的刚建的储存库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;第五步，创建索引文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;到这里，你的储存库尚未添加任何文件，你的网站也相应地空空如也．你需要添加索引文件&lt;/p&gt;
&lt;p&gt;这样，你就在你的网站上添加了一行&amp;quot;hello world&amp;quot;&lt;/p&gt;
&lt;p&gt;如果是使用terminal操作，你需要&lt;code&gt;cd&lt;/code&gt;进入克隆出的文件，然后向文件夹里添加内容：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd username.github.io

echo &amp;quot;Hello World&amp;quot; &amp;gt; index.html
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;第六步，提交和发布&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输入存储库，提交更改，然后按发布按钮。&lt;/p&gt;
&lt;p&gt;{% hl_text danger %}&lt;/p&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;p&gt;{% endhl_text %}&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;你克隆下来的储存库在本地，你可以通过Finder或者资源管理器找到它，把新文件放进去，Github客户端就能够读取到这些改变啦．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你使用terminal终端，可以用&lt;code&gt;push&lt;/code&gt;推送操作进行发布：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git add --all

git commit -m &amp;quot;Initial commit&amp;quot;

git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;http://cdn.yiyouls.com/desktop-demo.gif&#34; &gt;
		&lt;img src=&#34;http://cdn.yiyouls.com/desktop-demo.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到这里，你的网站就已经发布在了&lt;em&gt;username&lt;/em&gt; .github.io这个网址．教程到此结束．&lt;/p&gt;
&lt;p&gt;{% alert success %}&lt;/p&gt;
&lt;p&gt;you made it!&lt;/p&gt;
&lt;p&gt;{% endalert %}&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;http://cdn.yiyouls.com/really.gif&#34; &gt;
		&lt;img src=&#34;http://cdn.yiyouls.com/really.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;网站这么丑，能用它来干嘛&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;http://cdn.yiyouls.com/ugly.gif&#34; &gt;
		&lt;img src=&#34;http://cdn.yiyouls.com/ugly.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;的确是这样，我们的网站虽然已经发布，但它基本还是个没用的废物，因为到目前为止我们只给它添加了一个索引文件．如果想要实现更多丰富的功能（可能是一些必备的功能），你必须添加很多代码和文件进去．&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;http://cdn.yiyouls.com/busy.gif&#34; &gt;
		&lt;img src=&#34;http://cdn.yiyouls.com/busy.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么问题来了，真的忍心让你一点点把所有功能实现的代码都敲进去吗？那么建站所耗费的时间成本也太大了．事实上，我们大可不必这样．我们的开源社区已经有了很多可爱的工具和框架供我们使用，免去我们许多许多繁杂的工作．&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;http://cdn.yiyouls.com/foryou.gif&#34; &gt;
		&lt;img src=&#34;http://cdn.yiyouls.com/foryou.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么下篇博文，我会跟大家介绍一些可以让你的网站瞬间高大上起来的那些可爱的开源工具．so stay tuned.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;之所以要使用Githbub客户端，是因为它是一个非常便捷的git储存库管理工具，当我们开始使用jekyll这样的建站工具对网站进行功能升级的时候，单单通过终端显然是很麻烦的．&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
        </item>
        
    </channel>
</rss>
